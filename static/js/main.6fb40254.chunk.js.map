{"version":3,"sources":["App.jsx","Buttons.jsx","index.js"],"names":["text","id","App","useState","input","setInput","display","setDisplay","number","operator","eventHandler","event","newString","lastChar","btnPress","target","innerHTML","includes","length","substring","console","log","eval","replace","toFixed","toString","className","map","value","onClick","Buttons","props","ReactDOM","render","document","getElementById"],"mappings":"6wBAIMA,KAAO,CACX,CAAEC,GAAI,EAAGD,KAAM,KAAO,CAAEC,GAAI,EAAGD,KAAM,KAAO,CAAEC,GAAI,EAAGD,KAAM,QAC3D,CAAEC,GAAI,EAAGD,KAAM,QAAO,CAAEC,GAAI,EAAGD,KAAM,KAAO,CAAEC,GAAI,EAAGD,KAAM,KAAO,CAAEC,GAAI,EAAGD,KAAM,KACjF,CAAEC,GAAI,EAAGD,KAAM,KAAO,CAAEC,GAAI,GAAID,KAAM,KAAO,CAAEC,GAAI,GAAID,KAAM,KAAO,CAAEC,GAAI,GAAID,KAAM,KACpF,CAAEC,GAAI,GAAID,KAAM,KAAO,CAAEC,GAAI,GAAID,KAAM,KAAO,CAAEC,GAAI,GAAID,KAAM,KAAO,CAAEC,GAAI,GAAID,KAAM,KACrF,CAAEC,GAAI,GAAID,KAAM,KAAO,CAAEC,GAAI,GAAID,KAAM,MAEzC,SAASE,MACP,cAA0BC,oDAAS,KAAnC,+MAAOC,MAAP,cAAcC,SAAd,cACA,WAA8BF,qDAAS,GAAvC,gNAAOG,QAAP,cAAgBC,WAAhB,cAEMC,OAAS,cACTC,SAAW,aAEXC,aAAe,SAAfA,aAAgBC,OACpB,IAAIC,UACAC,SAEAC,SAAWH,MAAMI,OAAOC,UACxBR,OAAOS,SAASH,WAClBD,SAAWT,MAAOA,MAAMc,OAAU,IAClB,IAAZZ,QAEAD,SADY,MAAVD,MACOU,SAGAV,MAAQU,WAEA,IAAZR,SAAkC,MAAbO,UAAiC,MAAbA,UAAiC,SAAbA,UAAiC,SAAbA,UAKxE,IAAZP,SAAkC,MAAbO,UAAiC,MAAbA,UAAiC,SAAbA,UAAiC,SAAbA,UAKnFR,SAASD,OACTG,YAAW,KALXF,SAASS,UACTP,YAAW,KANbA,YAAW,GACXF,SAASD,MAAQU,YAcZL,SAASQ,SAASH,WACzBD,SAAWT,MAAOA,MAAMc,OAAU,GACjB,MAAbL,UAAiC,MAAbA,UAAiC,SAAbA,UAAiC,SAAbA,UAC9DD,UAAYR,MAAMe,UAAU,EAAGf,MAAMc,OAAS,GAC9Cb,SAASO,UAAYE,WAGL,MAAVV,OACJC,SAASD,MAAQU,WAGd,MAAQA,UACfF,UAAYR,MAAMe,UAAU,EAAGf,MAAMc,OAAS,GAC9Cb,SAASO,WACTQ,QAAQC,IAAIT,WACM,KAAdA,WACFP,SAAS,OAGXQ,SAAWT,MAAOA,MAAMc,OAAU,GAClCE,QAAQC,IAAI,IAAIR,UAEC,MAAbA,UAAiC,MAAbA,UAAiC,SAAbA,UAAiC,SAAbA,WAE9DR,SAAWiB,KAAKlB,MAAMmB,QAAQ,OAAK,KAAKA,QAAQ,OAAK,MAAOC,QAAQ,GAAIC,YACxElB,YAAW,MAIjB,OACE,+HACU,uGACV,mEAAKmB,UAAU,YAAf,UACE,kEAAKA,UAAU,OAAf,SAAuBtB,QACtBJ,KAAK2B,KAAI,SAAAC,GACR,OACE,2DAAC,wCAAD,CAAwB5B,KAAM4B,EAAM5B,KAAM6B,QAASnB,cAArCkB,EAAM3B,aASfC,2B,0CCvFA4B,IALD,SAACC,GACX,OACI,qBAAKL,UAAU,OAAOG,QAASE,EAAMF,QAArC,SAA+CE,EAAM/B,S,+BCH7D,sDAKAgC,IAASC,OACL,cAAC,IAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6fb40254.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Buttons from \"./Buttons\";\n\n\nconst text = [\n  { id: 2, text: \"+\" }, { id: 3, text: \"-\" }, { id: 4, text: \"×\" },\n  { id: 5, text: \"÷\" }, { id: 6, text: \"7\" }, { id: 7, text: \"8\" }, { id: 8, text: \"9\" },\n  { id: 9, text: \"4\" }, { id: 10, text: \"5\" }, { id: 11, text: \"6\" }, { id: 12, text: \"1\" },\n  { id: 13, text: \"2\" }, { id: 14, text: \"3\" }, { id: 15, text: \".\" }, { id: 16, text: \"0\" },\n  { id: 17, text: \"C\" }, { id: 18, text: \"=\" }\n];\nfunction App() {\n  const [input, setInput] = useState(\"0\");\n  const [display, setDisplay] = useState(false);\n\n  const number = \"0123456789.\";\n  const operator = \"+-×÷\";\n\n  const eventHandler = (event) => {\n    var newString;\n    var lastChar\n\n    let btnPress = event.target.innerHTML;\n    if (number.includes(btnPress)) {\n      lastChar = input[(input.length) - 1];\n      if (display === false) {\n        if (input === \"0\") {\n          setInput(btnPress);\n        }\n        else\n          setInput(input + btnPress)\n      }\n      else if (display === true && (lastChar === \"+\" || lastChar === \"-\" || lastChar === \"×\" || lastChar === \"÷\")) {\n        setDisplay(false);\n        setInput(input + btnPress)\n      }\n      else {\n        if (display === true && (lastChar !== \"+\" || lastChar !== \"-\" || lastChar !== \"×\" || lastChar !== \"÷\")) {\n          setInput(btnPress)\n          setDisplay(false);\n        }\n        else {\n          setInput(input);\n          setDisplay(false);\n        }\n      }\n\n    }\n    else if (operator.includes(btnPress)) {\n      lastChar = input[(input.length) - 1];\n      if (lastChar === \"+\" || lastChar === \"-\" || lastChar === \"×\" || lastChar === \"÷\") {\n        newString = input.substring(0, input.length - 1);\n        setInput(newString + btnPress)\n      }\n      else {\n        if (!(input === \"0\"))\n          setInput(input + btnPress);\n      }\n    }\n    else if (\"C\" === btnPress) {\n      newString = input.substring(0, input.length - 1);\n      setInput(newString);\n      console.log(newString);\n      if (newString === \"\")\n        setInput(\"0\")\n    }\n    else {\n      lastChar = input[(input.length) - 1];\n      console.log(\"=\",lastChar);\n      \n      if((lastChar !== \"+\" && lastChar !== \"-\" && lastChar !== \"×\" && lastChar !== \"÷\") )\n      {\n        setInput(((eval(input.replace(\"×\", \"*\").replace(\"÷\", \"/\"))).toFixed(2)).toString());\n        setDisplay(true);\n    }\n    }\n  }\n  return (\n    <>\n              <h1>Calculator Using ReactJS</h1>\n    <div className=\"container\">\n      <div className=\"item\">{input}</div>\n      {text.map(value => {\n        return (\n          <Buttons key={value.id} text={value.text} onClick={eventHandler} />\n        );\n      })\n      }\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","\r\nconst Buttons=(props)=>{\r\n    return(\r\n        <div className=\"item\" onClick={props.onClick}>{props.text}</div>\r\n    );\r\n}\r\nexport default Buttons;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}